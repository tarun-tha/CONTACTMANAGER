{"version":3,"sources":["Context.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/Layout/Header.js","components/Layout/TextInputGroup.js","components/Contacts/AddContact.js","components/Contacts/EditContact.js","components/Pages/About.js","components/Pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"w5BAEA,IAAMA,EAAQC,IAAMC,gBACdC,EAAS,SAACC,EAAMC,GAClB,OAAOA,EAAOC,MACV,IAAK,iBACD,YACOF,EADP,CAEIG,SAASH,EAAMG,SAASC,QACpB,SAAAC,GAAO,OAAIA,EAAQC,KAAKL,EAAOM,aAGvC,IAAK,cACL,YACOP,EADP,CAEIG,SAAS,CAACF,EAAOM,SAAT,mBAAoBP,EAAMG,aAGtC,IAAK,iBACD,YACOH,EADP,CAEIG,SAAUH,EAAMG,SAASK,KAAI,SAAAH,GAAO,OAChCA,EAAQC,KAAOL,EAAOM,QAAQD,GAAKD,EAAUJ,EAAOM,QAClDF,OAGd,QACI,OAAOL,IAGVS,EAAb,2MACIT,MAAM,CACFG,SAAS,GAmBTO,SAAS,SAAAT,GACL,EAAKU,UAAS,SAAAX,GAAK,OAAID,EAAQC,EAAMC,QAtBjD,mNAgCyBW,IAAMC,IAAI,8CAhCnC,OAgCaC,EAhCb,OAiCQC,KAAKJ,SAAS,CAACR,SAASW,EAAIE,OAjCpC,qIAoCI,OACI,kBAACpB,EAAQa,SAAT,CAAkBQ,MAAOF,KAAKf,OACzBe,KAAKG,MAAMC,cAtCxB,GAA8BC,aA2CjBC,EAASzB,EAAQyB,SCHfC,E,2MAhEXtB,MAAM,CACNuB,iBAAgB,G,EAEdC,c,uCAAc,WAAOlB,EAAGI,GAAV,SAAAe,EAAA,+EAEPb,IAAMc,OAAN,qDAC2CpB,IAHpC,OAIRI,EAAS,CAACR,KACR,iBAAiBK,QAAQD,IALnB,+CAOZI,EAAS,CAACR,KACR,iBAAiBK,QAAQD,IARf,wD,gIAWN,IAAD,SACmBS,KAAKG,MAAMb,QAAhCC,EADE,EACFA,GAAGqB,EADD,EACCA,KAAKC,EADN,EACMA,MAAMC,EADZ,EACYA,MACbN,EAAiBR,KAAKf,MAAtBuB,gBACJ,OACE,kBAACF,EAAD,MACG,SAAAJ,GAAS,IACFP,EAAUO,EAAVP,SACN,OACd,yBAAKoB,UAAU,uBACX,4BAAKH,EAAM,GACX,uBAAGI,QAAS,kBAAI,EAAKpB,SACrB,CAACY,iBAAkB,EAAKvB,MAAMuB,mBAEhCO,UAAY,mBACZE,MAAO,CAACC,OAAO,aACf,uBACAH,UAAU,eACVE,MAAO,CAACC,OAAO,UACjBC,MAAM,QACNC,MAAM,OACNJ,QAAS,EAAKP,cAAcY,KAAK,EAAK9B,EAAGI,MAEzC,kBAAC,IAAD,CAAM2B,GAAE,uBAAkB/B,IACxB,uBAAGwB,UAAU,oBACbE,MAAO,CACLC,OAAO,UACPC,MAAM,QACNC,MAAM,OACNG,YAAY,WAIbf,EACC,wBAAIO,UAAU,cACV,wBAAIA,UAAU,mBAAd,SACWF,GACP,wBAAIE,UAAU,mBAAd,SACWD,IAEnB,a,GAtDkBT,aCoBPmB,E,iLApBP,OACI,kBAAClB,EAAD,MACK,SAAAJ,GAAU,IACVd,EAAWc,EAAXd,SACL,OACA,6BACI,kBAAC,IAAMqC,SAAP,KACI,wBAAIV,UAAU,kBACV,0BAAMA,UAAU,eAAhB,WADJ,QAGJ3B,EAASK,KAAI,SAAAH,GAAO,OACrB,kBAAC,EAAD,CAASoC,IAAKpC,EAAQC,GAAGD,QAASA,gB,GAb1Be,aCAjBsB,EAAO,SAAAxB,GAAS,IACdyB,EAAUzB,EAAVyB,SACJ,OACJ,yBAAKb,UAAU,8DAEf,yBAAKA,UAAU,aACf,uBAAGc,KAAK,IAAGd,UAAU,gBAClBa,GAED,6BACE,wBAAIb,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMO,GAAG,IAAGP,UAAU,YACtB,uBAAGA,UAAW,gBADd,SAIE,wBAAIA,UAAU,YACd,kBAAC,IAAD,CAAMO,GAAG,eAAcP,UAAU,YAChC,uBAAGA,UAAW,gBADf,SAIA,wBAAIA,UAAU,YACd,kBAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,YAC3B,uBAAGA,UAAW,oBADf,gBAUVY,EAAOG,aAAa,CAClBF,SAAS,UAKID,Q,yBCtCRI,EAAgB,SAAC,GASjB,IARFC,EAQC,EARDA,MACApB,EAOC,EAPDA,KACAV,EAMC,EANDA,MACA+B,EAKC,EALDA,YACA9C,EAIC,EAJDA,KACA+C,EAGC,EAHDA,SACAC,EAEC,EAFDA,MAGD,OACI,yBAAKpB,UAAU,cACX,2BAAOqB,QAASxB,GAAQoB,GACxB,2BACJ7C,KAAMA,EACVyB,KAAMA,EACVG,UAAWsB,IAAW,+BAA+B,CAAC,aAAaF,IACnEF,YAAaA,EACb/B,MAAOA,EACPgC,SAAUA,IAETC,GAAS,yBAAKpB,UAAU,oBAAoBoB,KAa7CJ,EAAeD,aAAa,CACxB3C,KAAK,QAEM4C,QCsDAO,E,2MAxFVrD,MAAO,CACH2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPyB,OAAO,I,EAEXC,S,uCAAS,WAAO7C,EAAS8C,GAAhB,yBAAA/B,EAAA,yDAAqB+B,EAAEC,iBAAvB,EACkB,EAAKzD,MAAvB2B,EADA,EACAA,KAAKC,EADL,EACKA,MAAMC,EADX,EACWA,MACL,KAARF,EAFE,uBAGF,EAAKhB,SAAS,CAAE2C,OAAS,CAAE3B,KAAO,sBAHhC,6BAMM,KAATC,EANG,uBAOF,EAAKjB,SAAS,CAAE2C,OAAS,CAAE1B,MAAQ,uBAPjC,6BAUM,KAATC,EAVG,wBAWF,EAAKlB,SAAU,CAAC2C,OAAS,CAAEzB,MAAQ,uBAXjC,kCAcA6B,EAAW,CAEf/B,OACAC,QACAC,SAlBI,UAoBUjB,IAAM+C,KAAK,6CAC3BD,GArBM,QAoBD5C,EApBC,OAsBNJ,EAAS,CAACR,KAAO,cAAeK,QAASO,EAAIE,OAC7C,EAAKL,SAAS,CACVgB,KAAK,GACLC,MAAM,GACNC,MAAM,GACNyB,OAAO,KAEX,EAAKpC,MAAM0C,QAAQC,KAAK,KA7BlB,4C,0DA+BdZ,SAAS,SAAAO,GAAC,OAAE,EAAK7C,SAAL,eAAgB6C,EAAEM,OAAOnC,KAAM6B,EAAEM,OAAO7C,S,wEACtC,IAAD,SACgCF,KAAKf,MAAlC2B,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOyB,EADvB,EACuBA,OAC5B,OACA,kBAACjC,EAAD,MACK,SAAAJ,GAAU,IACHP,EAAUO,EAAVP,SACN,OACI,yBAAKoB,UAAU,aACf,yBAAKA,UAAU,eAAf,cACA,yBAAKA,UAAU,aACX,0BAAMyB,SAAU,EAAKA,SAASnB,KAAK,EAAK1B,IACpC,kBAAC,EAAD,CACAqC,MAAM,OACNpB,KAAK,OACLqB,YAAY,aACZ/B,MAAOU,EACPsB,SAAU,EAAKA,SACfC,MAAOI,EAAO3B,OAEnB,kBAAC,EAAD,CACKoB,MAAM,QACNpB,KAAK,QACLzB,KAAK,QACL8C,YAAY,cACZ/B,MAAOW,EACPqB,SAAU,EAAKA,SACfC,MAAOI,EAAO1B,QAEpB,kBAAC,EAAD,CACMmB,MAAM,QACNpB,KAAK,QACLqB,YAAY,cACZ/B,MAAOY,EACPoB,SAAU,EAAKA,SACfC,MAAOI,EAAOzB,QAEd,2BACC3B,KAAK,SACNe,MAAM,cACNa,UAAU,sC,GA9EVV,aCmGX2C,E,2MAnGV/D,MAAO,CACH2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPyB,OAAO,I,EAYXC,S,uCAAS,WAAO7C,EAAS8C,GAAhB,2BAAA/B,EAAA,yDAAqB+B,EAAEC,iBAAvB,EACkB,EAAKzD,MAAvB2B,EADA,EACAA,KAAKC,EADL,EACKA,MAAMC,EADX,EACWA,MACL,KAARF,EAFE,uBAGF,EAAKhB,SAAS,CAAE2C,OAAS,CAAE3B,KAAO,sBAHhC,6BAMM,KAATC,EANG,uBAOF,EAAKjB,SAAS,CAAE2C,OAAS,CAAE1B,MAAQ,uBAPjC,6BAUM,KAATC,EAVG,wBAWF,EAAKlB,SAAU,CAAC2C,OAAS,CAAEzB,MAAQ,uBAXjC,kCAcAmC,EAAY,CACdrC,OACAE,QACAD,SAEGtB,EAAK,EAAKY,MAAM+C,MAAMC,OAAtB5D,GAnBD,UAoBYM,IAAMuD,IAAN,qDAAwD7D,GAC1E0D,GArBM,QAoBAlD,EApBA,OAuBNJ,EAAS,CAACR,KAAO,iBAAkBK,QAASO,EAAIE,OAChD,EAAKL,SAAS,CACVgB,KAAK,GACLC,MAAM,GACNC,MAAM,GACNyB,OAAO,KAEX,EAAKpC,MAAM0C,QAAQC,KAAK,KA9BlB,4C,0DAgCdZ,SAAS,SAAAO,GAAC,OAAE,EAAK7C,SAAL,eAAgB6C,EAAEM,OAAOnC,KAAM6B,EAAEM,OAAO7C,S,8MAzCpCX,EAAKS,KAAKG,MAAM+C,MAAMC,OAAtB5D,G,SACUM,IAAMC,IAAN,qDAAwDP,I,OAApEQ,E,OACCT,EAAQS,EAAIE,KAClBD,KAAKJ,SAAS,CACVgB,KAAKtB,EAAQsB,KACbC,MAAMvB,EAAQuB,MACdC,MAAMxB,EAAQwB,Q,qIAoCb,IAAD,SACgCd,KAAKf,MAAlC2B,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOyB,EADvB,EACuBA,OAC5B,OACA,kBAACjC,EAAD,MACK,SAAAJ,GAAU,IACHP,EAAUO,EAAVP,SACN,OACI,yBAAKoB,UAAU,aACf,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aACX,0BAAMyB,SAAU,EAAKA,SAASnB,KAAK,EAAK1B,IACpC,kBAAC,EAAD,CACAqC,MAAM,OACNpB,KAAK,OACLqB,YAAY,aACZ/B,MAAOU,EACPsB,SAAU,EAAKA,SACfC,MAAOI,EAAO3B,OAEnB,kBAAC,EAAD,CACKoB,MAAM,QACNpB,KAAK,QACLzB,KAAK,QACL8C,YAAY,cACZ/B,MAAOW,EACPqB,SAAU,EAAKA,SACfC,MAAOI,EAAO1B,QAEpB,kBAAC,EAAD,CACMmB,MAAM,QACNpB,KAAK,QACLqB,YAAY,cACZ/B,MAAOY,EACPoB,SAAU,EAAKA,SACfC,MAAOI,EAAOzB,QAEd,2BACC3B,KAAK,SACNe,MAAM,iBACNa,UAAU,sC,GAzFTV,a,QCFZ,WAAAF,GACX,OACI,6BACI,wBAAIY,UAAU,aAAaZ,EAAM+C,MAAMC,OAAO5D,GAA9C,2CACA,uBAAGwB,UAAU,QAAb,kCACA,uBAAGA,UAAW,kBAAd,mBCLG,aACX,OACI,6BACE,wBAAIA,UAAU,aACV,0BAAMA,UAAU,eAAhB,OADJ,kBAII,uBAAGA,UAAU,QAAb,gDCmCCsC,E,2MA1CbpE,MAAM,CACLqE,MAAM,GACNC,KAAK,I,mFAEgB,IAAD,OACjBC,MAAM,gDACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAxD,GAAI,OAAG,EAAKL,SAAS,CACzB0D,MAAMrD,EAAKqD,MACXC,KAAKtD,EAAKsD,Y,+BAuBJ,IAAD,EACWvD,KAAKf,MAAjBqE,EADC,EACDA,MAAMC,EADL,EACKA,KACV,OACI,6BACG,4BAAKD,GACL,2BAAIC,Q,GAtCAlD,aCmCJuD,E,iLArBZ,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACF,yBAAK7C,UAAU,OACb,kBAAC,EAAD,CAAQa,SAAS,mBACjB,yBAAKb,UAAU,aACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,IAAGC,UAAWvC,IAChC,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,eAAeC,UAAWzB,IAC5C,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,oBAAmBC,UAAWf,IAChD,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,aAAYC,UAAWC,IACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAOC,UAAWV,IACpC,kBAAC,IAAD,CAAOU,UAAWE,a,GAdTnF,IAAMuB,WCDJ6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnB,MACvB,2DCZNoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnB,MAAK,SAAAoB,GACjCA,EAAaC,kB","file":"static/js/main.d7862d16.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nconst Context=React.createContext();\r\nconst reducer= (state,action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts:state.contacts.filter(\r\n                    contact => contact.id!==action.payload\r\n                    )\r\n            };\r\n            case 'ADD_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts:[action.payload,...state.contacts]\r\n                    \r\n            };\r\n            case \"UPDATE_CONTACT\":\r\n                return{\r\n                    ...state,\r\n                    contacts: state.contacts.map(contact=>\r\n                        contact.id === action.payload.id? (contact = action.payload)\r\n                        : contact\r\n                    )\r\n                };\r\n            default:\r\n                return state;\r\n    }\r\n};\r\nexport class Provider extends Component{\r\n    state={\r\n        contacts:[\r\n         /*   {\r\n                id:1,\r\n                name:'tarun',\r\n                email:'anjanneeraj@gmail.com',\r\n                phone:'345 356 356'\r\n            },\r\n            { id:2,\r\n            name:'jdwg',\r\n            email:'dkgfjhv@gmail.com',\r\n            phone:'654 876 764',\r\n        },\r\n        { id:3,\r\n            name:'reikug',\r\n            email:'ijhkjjhv@gmail.com',\r\n            phone:'678 234 764',\r\n        \r\n         }*/\r\n        ],\r\n        dispatch:action=>{\r\n            this.setState(state => reducer(state,action))\r\n        }\r\n      };\r\n     // componentWillUpdate(){\r\n     //   console.log('componentWillUpdate....');\r\n     // }\r\n      /*componentDidUpdate(){\r\n        console.log('componentDidUpdate....');\r\n      }*/\r\n    async componentDidMount(){\r\n       const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts:res.data});\r\n      }\r\nrender(){\r\n    return(\r\n        <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n        </Context.Provider>\r\n     );\r\n  }\r\n}\r\nexport const Consumer=Context.Consumer;","import React, { Component } from \"react\";\r\nimport{Link}from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport {Consumer} from '../../Context';\r\nimport axios from 'axios';\r\nclass Contact extends Component {\r\n    state={\r\n    showContactInfo:true\r\n    };\r\n      onDeleteClick=async (id,dispatch)=>{\r\n        try{\r\n       await axios.delete(\r\n          `https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type:\r\n              'DELETE_CONTACT',payload:id});\r\n         }catch(e){\r\n        dispatch({type:\r\n          'DELETE_CONTACT',payload:id});\r\n        }\r\n      };\r\n    render() {\r\n     const{id,name,email,phone}=this.props.contact;\r\n      const{showContactInfo}=this.state;\r\n        return (\r\n          <Consumer>\r\n            {value =>{\r\n              const{dispatch}=value;\r\n              return(\r\n<div className=\"card card.body mb-3\">\r\n    <h4>{name}{''}\r\n    <i onClick={()=>this.setState(\r\n    {showContactInfo: !this.state.showContactInfo})\r\n  } \r\n  className = \"fas fa-sort-down\"\r\n  style={{cursor:'pointer'}}></i>\r\n  <i \r\n  className=\"fas fa-times\"\r\n  style={{cursor:'Pointer',\r\nfloat:'right',\r\ncolor:'red'}}\r\nonClick={this.onDeleteClick.bind(this,id,dispatch)}\r\n/></h4>\r\n<Link to={`Contact/edit/${id}`}>\r\n  <i className='fas fa-pencil-alt'\r\n  style={{\r\n    cursor:'pointer',\r\n    float:'right',\r\n    color:'blue',\r\n    marginRight:'1rem'\r\n  }}\r\n />\r\n</Link>\r\n  {showContactInfo?(\r\n    <ul className=\"list-group\">\r\n        <li className=\"list-group-list\">\r\n            Email:{email}</li>\r\n            <li className=\"list-group-item\">\r\n                Phone:{phone}</li>\r\n    </ul>\r\n  ):null}\r\n</div>\r\n              );\r\n  }}\r\n</Consumer>\r\n        );\r\n    }\r\n}\r\nContact.propTypes={\r\n    contact:PropTypes.object.isRequired,\r\n};\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\nclass Contacts extends Component {\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n         const { contacts }=value;\r\n            return (\r\n            <div>\r\n                <React.Fragment>\r\n                    <h1 className=\"display-4 mb-2\">\r\n                        <span className=\"text-danger\">Contact\r\n                        </span>List</h1>\r\n               {contacts.map(contact => ( \r\n               <Contact key={contact.id}contact={contact} />\r\n               ))}\r\n               </React.Fragment>\r\n            </div>\r\n            );\r\n        }}\r\n         </Consumer>\r\n        );   \r\n}}\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport{Link}from 'react-router-dom';\r\nconst Header=props=> {\r\n  const{branding}=props;\r\n    return (\r\n<nav className=\"navbar navbar-expand-sm\r\nnavbar-dark bg-danger mb-3 py-0\">\r\n<div className=\"container\">\r\n<a href=\"/\"className=\"navbar-brand\">\r\n  {branding}\r\n  </a>\r\n  <div>\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/\"className=\"nav-link\">\r\n        <i className =\"fas fa-home\"/>Home\r\n          </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link to=\"/Contact/add\"className=\"nav-link\">\r\n           <i className =\"fas fa-plus\"/> Add\r\n          </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n           <i className =\"fas fa-question\"/> About \r\n            </Link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  </div>\r\n  </nav>\r\n    );\r\n};\r\nHeader.defaultProps={\r\n  branding:'My App'\r\n};\r\nHeader.propTypes={\r\n  branding:PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n const TextInputGroup= ({\r\n     label,\r\n     name,\r\n     value,\r\n     placeholder,\r\n     type,\r\n     onChange,\r\n     error\r\n     \r\n })=> {\r\n    return (\r\n        <div className=\"from-group\">\r\n            <label htmlFor={name} >{label}</label> \r\n            <input\r\n        type={type}\r\n    name={name}\r\nclassName={classnames(\"from-control from-control-lg\",{'is-invalid':error})}\r\nplaceholder={placeholder}\r\nvalue={value}\r\nonChange={onChange}\r\n/>\r\n{error && <div className=\"invalid-feedback\">{error}</div>}\r\n</div>\r\n    );\r\n};\r\nTextInputGroup.propTypes = {\r\n    label:PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    error:PropTypes.string\r\n};\r\nTextInputGroup.defaultProps={\r\n    type:'text'\r\n};\r\nexport default TextInputGroup;","import{Consumer}from'../../Context';\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n//import uuid from 'uuid';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\n class AddContact extends Component {\r\n     state ={\r\n         name :'',\r\n         email :'',\r\n         phone :'',\r\n         errors:{}\r\n     };\r\n     onSubmit=async (dispatch,e)=>{e.preventDefault();\r\n        const{name,email,phone}=this.state;\r\n        if (name=== \"\"){\r\n            this.setState({ errors : { name : \"Name is required\" } });\r\n            return;\r\n        }\r\n        if(email=== \"\"){\r\n            this.setState({ errors : { email : \"Email is required\"} });\r\n            return;\r\n        }\r\n        if(phone=== \"\"){\r\n            this.setState( {errors : { phone : \"Phone is required\"} });\r\n            return;\r\n        }\r\n        const newContact={\r\n         // id:uuid(),\r\n          name,\r\n          email,\r\n          phone\r\n        };\r\n       const res =await axios.post('https://jsonplaceholder.typicode.com/users',\r\n        newContact )\r\n        dispatch({type:  'ADD_CONTACT', payload: res.data});\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n        this.props.history.push('/');\r\n};\r\nonChange=e=>this.setState({[e.target.name]:e.target.value});\r\n    render() {\r\n        const { name, email, phone, errors }=this.state;\r\n        return (\r\n        <Consumer>\r\n            {value => {\r\n              const{dispatch}=value;\r\n              return(\r\n                  <div className=\"card mb-3\">\r\n                  <div className=\"card-header\">AddContact</div>\r\n                  <div className=\"card-body\">\r\n                      <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                          <TextInputGroup\r\n                          label=\"Name\"\r\n                          name=\"name\"\r\n                          placeholder=\"Enter Name\"\r\n                          value={name}\r\n                          onChange={this.onChange}\r\n                          error={errors.name}\r\n                          />\r\n                     <TextInputGroup\r\n                          label=\"Email\"\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          placeholder=\"Enter Email\"\r\n                          value={email}\r\n                          onChange={this.onChange}\r\n                          error={errors.email}\r\n                          />\r\n                    <TextInputGroup\r\n                          label=\"Phone\"\r\n                          name=\"phone\"\r\n                          placeholder=\"Enter Phone\"\r\n                          value={phone}\r\n                          onChange={this.onChange}\r\n                          error={errors.phone}\r\n                          />\r\n                          <input\r\n                           type=\"submit\"\r\n                          value=\"Add Contact\"\r\n                          className=\"btn btn-light btn-block\"\r\n                          />\r\n                          </form>\r\n                          </div>\r\n                          </div>\r\n              );\r\n              }}\r\n             </Consumer>\r\n         );\r\n    }\r\n}\r\nexport default AddContact;","import React, { Component } from \"react\";\r\nimport{Consumer}from'../../Context';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\nimport axios from 'axios';\r\n class EditContact extends Component {\r\n     state ={\r\n         name :'',\r\n         email :'',\r\n         phone :'',\r\n         errors:{}\r\n     };\r\n     async componentDidMount(){\r\n         const {id} =this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n         const contact=res.data;\r\n         this.setState({\r\n             name:contact.name,\r\n             email:contact.email,\r\n             phone:contact.phone,\r\n       });\r\n    }\r\n     onSubmit=async (dispatch,e)=>{e.preventDefault();\r\n        const{name,email,phone}=this.state;\r\n        if (name=== \"\"){\r\n            this.setState({ errors : { name : \"Name is required\" } });\r\n            return;\r\n        }\r\n        if(email=== \"\"){\r\n            this.setState({ errors : { email : \"Email is required\"} });\r\n            return;\r\n        }\r\n        if(phone=== \"\"){\r\n            this.setState( {errors : { phone : \"Phone is required\"} });\r\n            return;\r\n        }\r\n        const updContact ={\r\n            name,\r\n            phone,\r\n            email\r\n        };\r\n        const {id} =this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,\r\n        updContact\r\n        );\r\n        dispatch({type:  'UPDATE_CONTACT', payload: res.data});\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n        this.props.history.push('/');\r\n};\r\nonChange=e=>this.setState({[e.target.name]:e.target.value});\r\n    render() {\r\n        const { name, email, phone, errors }=this.state;\r\n        return (\r\n        <Consumer>\r\n            {value => {\r\n              const{dispatch}=value;\r\n              return(\r\n                  <div className=\"card mb-3\">\r\n                  <div className=\"card-header\">EditContact</div>\r\n                  <div className=\"card-body\">\r\n                      <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                          <TextInputGroup\r\n                          label=\"Name\"\r\n                          name=\"name\"\r\n                          placeholder=\"Enter Name\"\r\n                          value={name}\r\n                          onChange={this.onChange}\r\n                          error={errors.name}\r\n                          />\r\n                     <TextInputGroup\r\n                          label=\"Email\"\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          placeholder=\"Enter Email\"\r\n                          value={email}\r\n                          onChange={this.onChange}\r\n                          error={errors.email}\r\n                          />\r\n                    <TextInputGroup\r\n                          label=\"Phone\"\r\n                          name=\"phone\"\r\n                          placeholder=\"Enter Phone\"\r\n                          value={phone}\r\n                          onChange={this.onChange}\r\n                          error={errors.phone}\r\n                          />\r\n                          <input\r\n                           type=\"submit\"\r\n                          value=\"Update Contact\"\r\n                          className=\"btn btn-light btn-block\"\r\n                          />\r\n                          </form>\r\n                          </div>\r\n                          </div>\r\n              );\r\n              }}\r\n             </Consumer>\r\n         );\r\n    }\r\n}\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default props => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">{props.match.params.id} its is wrong in hindi bole to glt hai </h1>\r\n            <p className=\"lead\"> Simple app to manage contacts</p>\r\n            <p className =\"text-secondary\">\r\n                version 1.0.0\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nexport default ()=> {\r\n    return (\r\n        <div>\r\n          <h1 className=\"display-4\">\r\n              <span className=\"text-danger\">404\r\n              </span>  \r\n               Page Not Found</h1>\r\n              <p className=\"lead\">Sorry,Page abhi busy hai baad mai try krna</p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\nclass Test extends Component {\r\n  state={\r\n   title:'',\r\n   body:''\r\n  };\r\n    componentDidMount(){\r\n      fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response=>response.json())\r\n      .then(data =>this.setState({\r\n        title:data.title,\r\n        body:data.body\r\n      })\r\n      );\r\n  }\r\n  /*\r\n      componentWillMount(){\r\n        console.log('componentWillMount....');\r\n    }\r\n      componentDidUpdate(){\r\n    console.log('componentDidUpdate....');\r\n   }*/\r\n // componentWillReceiveProps(nextProps,nextState){\r\n // console.log('componentWillReceive...');\r\n // }\r\n // static getDerivedStateFromPages(nextProps,prevState){\r\n  // return{\r\n  //    test:'something'\r\n   //     };\r\n  //}\r\n    //    getSnapshotBeforeUpdate(nextProps,prevState)\r\n    //    {\r\n    //      console.log(' getSnapshotBeforeUpdate...');\r\n    //    }\r\n    render() {\r\n      const{title,body}=this.state;\r\n        return (\r\n            <div>\r\n               <h1>{title}</h1>\r\n               <p>{body}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Test;","import React from 'react';\n//import logo from './logo.svg';\nimport \"./App.css\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Header from \"./components/Layout/Header\";\nimport\"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from './Context';\nimport AddContact from \"./components/Contacts/AddContact\";\nimport EditContact from \"./components/Contacts/EditContact\";\nimport{HashRouter as Router,Route,Switch}from 'react-router-dom';\nimport About from './components/Pages/About';\nimport NotFound from './components/Pages/NotFound';\nimport Test from './components/test/Test';\nclass App extends React.Component {\n  render(){\n   return(\n     <Provider>\n       <Router>\n     <div className=\"App\">\n       <Header branding=\"Contact Manger\"/>\n       <div className=\"Container\">\n       <Switch>\n         <Route exact path=\"/\"component={Contacts}/>\n         <Route exact path=\"/Contact/add\" component={AddContact}/>\n         <Route exact path=\"/Contact/edit/:id\"component={EditContact}/>\n         <Route exact path=\"/about/:id\"component={About}/>\n         <Route exact path=\"/test\"component={Test}/>\n         <Route component={NotFound}/>\n         </Switch>   \n     </div>\n     </div>\n     </Router>\n     </Provider>\n   );\n}\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}